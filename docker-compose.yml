version: "3.9"
services:
    traefik:
        image: traefik:2.4
        command:
            --providers.docker=true
            --providers.docker.exposedByDefault=false
            --entryPoints.http.address=:80
        ports:
            - "80:80"
        networks:
            - traefik-public
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public

    api:
        build:
            context: api/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./api:/app
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.api.rule=Host(`api.localhost`)
            - traefik.http.routers.api.entryPoints=http
            - traefik.http.services.api.loadBalancer.server.port=80

    api-php-fpm:
        build:
            context: api/docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            PHP_IDE_CONFIG: serverName=API
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD_FILE: /run/secrets/api_db_password
            DB_NAME: app
        volumes:
            - ./api:/app

    api-php-cli:
        build:
            context: api/docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            APP_ENV: dev
            APP_DEBUG: 1
            DB_HOST: api-postgres
            DB_USER: app
            DB_PASSWORD_FILE: /run/secrets/api_db_password
            DB_NAME: app
        volumes:
            - ./api:/app

    api-postgres:
        image: postgres:13.3-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD_FILE: /run/secrets/api_db_password
            POSTGRES_DB: app
        secrets:
            - api_db_password
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "5432:5432"

    frontend:
        build:
            context: frontend/docker/development/nginx
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.frontend.rule=Host(`localhost`) || Host(`www.localhost`)
            - traefik.http.routers.frontend.entryPoints=http
            - traefik.http.services.frontend.loadBalancer.server.port=80
            - traefik.http.middlewares.frontend-redirect.redirectRegex.regex=^(https?://)www.localhost/(.*)$$
            - traefik.http.middlewares.frontend-redirect.redirectRegex.replacement=$${1}localhost/$${2}
            - traefik.http.middlewares.frontend-redirect.redirectRegex.permanent=true
            - traefik.http.routers.frontend.middlewares=frontend-redirect

    frontend-node:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend:/app
        command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn serve -- --port 3000"
        tty: true

    frontend-node-cli:
        build:
            context: frontend/docker/development/node
        volumes:
            - ./frontend:/app

secrets:
    api_db_password:
        file: ./docker/development/secrets/api_db_password

volumes:
    api-postgres:

networks:
    traefik-public:
        name: traefik-public
